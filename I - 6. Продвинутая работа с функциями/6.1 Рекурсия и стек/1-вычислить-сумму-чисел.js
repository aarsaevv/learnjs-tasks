'use strict'

// С использованием цикла

function sumTo(n) {
	let sum = 0
	for(let i = 1; i <= n; i++) {
		sum += i
	}
	return sum
}

// Через рекурсию

function sumTo(n) {
	if(n === 0) return null
	if(n === 1) return 1
	return n + sumTo(n - 1)
}

// С использованием формулы арифметической прогрессии

function sumTo(n) {
	return ((1 + n) / 2) * n
}

console.log(sumTo(100))

// Самым быстрым будет вариант с формулой арифметической прогрессии,
// потому что задача решается простым алгебраическим выражением, т.е. в один проход
// Самым медленным будет рекурсивный алгоритм,
// потому что стоимость вызова функции каждый раз будет суммарно выше

// При вызове рекурсивной функции с параметром 100000 происходит Stack call size exceeded,
// т.е. переполняется стек вызовов